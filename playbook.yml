---
- name: Setup k3s Cluster
  hosts: all
  become: true
  tasks:
  - name: Load Kernel Modules
    copy:
      dest: /etc/modules-load.d/k8s.conf
      content: |
        overlay
        br_netfilter

  - name: Load overlay and br_netfilter modules
    command: modprobe {{ item }}
    loop:
    - overlay
    - br_netfilter

  - name: Set sysctl parameters for Kubernetes
    copy:
      dest: /etc/sysctl.d/k8s.conf
      content: |
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
        net.ipv4.ip_forward = 1

  - name: Apply sysctl settings
    command: sysctl --system

  - name: Update package index and install required packages
    apt:
      update_cache: yes
      name:
      - ca-certificates
      - curl
      - apt-transport-https
      - gpg
      state: present

  - name: Create directory for Docker GPG key
    file:
      path: /etc/apt/keyrings
      state: directory
      mode: '0755'

  - name: Add Docker's official GPG key
    get_url:
      url: https://download.docker.com/linux/ubuntu/gpg
      dest: /etc/apt/keyrings/docker.asc
      mode: '0644'

  - name: Get the architecture
    command: dpkg --print-architecture
    register: dpkg_arch

  - name: Add Docker repository
    apt_repository:
      repo: "deb [arch={{ dpkg_arch.stdout }} signed-by=/etc/apt/keyrings/docker.asc]
        https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }}
        stable"
      filename: docker
      state: present

  - name: Install Docker and Containerd
    apt:
      update_cache: yes
      name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
      state: present

  - name: Add user to docker group
    user:
      name: "{{ ansible_user }}"
      groups: docker
      append: yes

  - name: Enable and start Docker services
    systemd:
      name: "{{ item }}"
      enabled: true
      state: started
    loop:
    - docker.service
    - containerd.service

  - name: Configure cgroups to --> systemd
    shell: containerd config default | sed 's/SystemdCgroup = false/SystemdCgroup =
      true/' | sed 's/sandbox_image = "registry.k8s.io\/pause:3.6"/sandbox_image
      = "registry.k8s.io\/pause:3.9"/' | sudo tee /etc/containerd/config.toml

  - name: Restart Containerd
    systemd:
      name: containerd
      state: restarted
